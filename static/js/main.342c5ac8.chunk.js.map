{"version":3,"sources":["components/About.jsx","components/TrendingCard.jsx","components/Movies.jsx","components/TrendingNavBar.jsx","App.js","index.js"],"names":["genres","About","props","loc","useLocation","pathname","replace","path","Container","Button","basic","color","as","Link","to","movies","results","map","movie","id","Number","Header","style","display","justifyContent","title","release_date","Grid","columns","centered","doubling","Column","Image","size","src","poster_path","CardGroup","stackable","itemsPerRow","Card","Content","Description","overview","gen","genre_ids","includes","name","undefined","vote_average","TrendingCard","useEffect","backdrop","wrapped","ui","Meta","releasedate","synopsis","slice","extra","Rating","disabled","maxRating","rating","icon","state","Movies","key","TrendingNavBar","Menu","inverted","Item","App","useState","data","setData","a","fetch","process","res","json","tmp","fetchData","console","log","render","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.342c5ac8.chunk.js","sourcesContent":["import React from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport { Container, Card, Image, Button, Header, Grid, CardGroup} from 'semantic-ui-react';\n\nconst genres = [{\"id\":28,\"name\":\"Action\"},{\"id\":12,\"name\":\"Adventure\"},{\"id\":16,\"name\":\"Animation\"},{\"id\":35,\"name\":\"Comedy\"},{\"id\":80,\"name\":\"Crime\"},{\"id\":99,\"name\":\"Documentary\"},{\"id\":18,\"name\":\"Drama\"},{\"id\":10751,\"name\":\"Family\"},{\"id\":14,\"name\":\"Fantasy\"},{\"id\":36,\"name\":\"History\"},{\"id\":27,\"name\":\"Horror\"},{\"id\":10402,\"name\":\"Music\"},{\"id\":9648,\"name\":\"Mystery\"},{\"id\":10749,\"name\":\"Romance\"},{\"id\":878,\"name\":\"Science Fiction\"},{\"id\":10770,\"name\":\"TV Movie\"},{\"id\":53,\"name\":\"Thriller\"},{\"id\":10752,\"name\":\"War\"},{\"id\":37,\"name\":\"Western\"}]\n\nfunction About(props){\n\n    let loc = useLocation().pathname.replace(props.path, \"\");\n  \n    return(\n      <>\n      \n      <Container>\n      <Button basic color=\"blue\" as={Link} to={props.path}>Back</Button>\n        {props.movies.results.map(movie => {\n      return movie.id === Number(loc) ? (<>\n        <Header as=\"h1\" style={{display: 'flex', justifyContent: 'center'}}>{movie.title +  \" (\"+ movie.release_date +\")\"}</Header>\n        <Grid columns={3} centered doubling>\n        <Grid.Column>\n        <Image size=\"large\" src={\"https://image.tmdb.org/t/p/w500/\" + movie.poster_path}\n        />\n  \n     \n      </Grid.Column>\n  \n      <Grid.Column> \n        \n        <CardGroup stackable itemsPerRow={2}>\n        <Card color=\"blue\">\n        <Card.Content>\n          <Card.Header>Synopsis</Card.Header>\n          <Card.Description>\n          {movie.overview}\n          </Card.Description>\n        </Card.Content>\n      </Card>\n  \n      <Card color=\"blue\">\n        <Card.Content>\n          <Card.Header>Genre</Card.Header>\n          <Card.Description>\n          {genres.map((gen) => {\n              return movie.genre_ids.includes(gen.id) ? <p>{gen.name}</p> : undefined\n             })}\n          </Card.Description>\n        </Card.Content>\n      </Card>\n  \n      <Card color=\"blue\">\n        <Card.Content>\n          <Card.Header>Rating</Card.Header>\n          <Card.Description>\n          {movie.vote_average} / 10\n          </Card.Description>\n        </Card.Content>\n      </Card>\n      </CardGroup>\n   </Grid.Column>\n  </Grid>\n        \n  \n  \n  \n      </>)\n    : <></>;\n    })}\n      </Container>\n      </>\n    )\n  }\n\nexport default About;","import React, {useEffect} from 'react';\nimport { Image, Button, Rating, Card} from 'semantic-ui-react';\nimport { Link} from 'react-router-dom';\n\n\nfunction TrendingCard(props) {\n\n    useEffect(() => {\n      \n    }, [props.vote_average]);\n    return(  \n    <Card>\n      <Image src={\"https://image.tmdb.org/t/p/w300/\" + props.backdrop} wrapped ui={false} />\n      <Card.Content>\n        <Card.Header>{props.title}</Card.Header>\n        <Card.Meta>{props.releasedate}</Card.Meta>\n        <Card.Description>\n          {props.synopsis.slice(0, 80) + \" ...\"}\n        </Card.Description>\n      </Card.Content>\n      <Card.Content extra>\n        <Rating disabled maxRating={5} rating={props.vote_average} icon='star' /> \n        <Button basic color={\"blue\"} as={Link} to={{pathname: props.path + props.id, state: {id: props.id}}}>    \n        Read more\n         </Button>\n      </Card.Content>\n    </Card>);\n}\n\nexport default TrendingCard;","import React from 'react';\nimport { Container, Grid} from 'semantic-ui-react';\nimport TrendingCard from './TrendingCard'\n\nfunction Movies(props) {\n\n    return(\n      <Container>\n        <Grid  centered columns={6} doubling >\n\n        \n            {props.movies.results.map( (movie) => {\n              return (\n                movie.title ? <Grid.Column > \n                                <TrendingCard \n                                  title={movie.title} \n                                  releasedate={movie.release_date} \n                                  synopsis={movie.overview} \n                                  vote_average={movie.vote_average} \n                                  backdrop={movie.poster_path} \n                                  key={movie.id} id={movie.id} \n              path={props.path}/></Grid.Column>  : \"\");\n            })\n            }\n      </Grid>\n    </Container>\n    );\n  }\n\nexport default Movies;","import React from 'react';\nimport { Menu } from 'semantic-ui-react';\nimport { Link } from 'react-router-dom';\n\nfunction TrendingNavBar(props){\n    return(\n    <Menu inverted>\n        <Menu.Item as={Link} to={props.path}>\n            TrendingMovies\n        </Menu.Item>\n    </Menu>\n    )\n}\n\nexport default TrendingNavBar;","import React, { useState, useEffect} from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\nimport About from \"./components/About\";\nimport Movies from \"./components/Movies\";\nimport TrendingNavBar from \"./components/TrendingNavBar\";\n\n\nfunction App() {\n  const [data, setData] = useState({ results: [] });\n\n  useEffect(() => {\n    /* API CALL */\n    const fetchData = async () => {\n      const res = await fetch(\n        `https://api.themoviedb.org/3/trending/movie/week?api_key=${process.env.REACT_APP_THE_MOVIE_DB_API_KEY}`\n      );\n      const tmp = await res.json();\n      setData(tmp);\n    };\n    fetchData();\n\n  }, []);\n\n  console.log(data);\n\n  return (\n    <>\n      {/* ROUTING */}\n      <Switch>\n        <Route path={\"/trending-movies/movie/:id\"} render={() => {\n          return(\n            <>\n              <TrendingNavBar path={\"/trending-movies\"}/>\n              <About movies={data} path={\"/trending-movies/movie/\"} />\n            </>)\n        }}/>\n        <Route path=\"/\" render={()=> {\n          return(\n            <>\n              <TrendingNavBar path={\"/trending-movies\"} />\n              <Movies movies={data} path={\"/trending-movies/movie/\"} />\n            </>)\n        }}/>\n      </Switch>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport './semantic/dist/semantic.min.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App/>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}